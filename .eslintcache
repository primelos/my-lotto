[{"/Users/alearanibar/codingcfv/reactpractice/lottery/src/index.js":"1","/Users/alearanibar/codingcfv/reactpractice/lottery/src/App.js":"2","/Users/alearanibar/codingcfv/reactpractice/lottery/src/reportWebVitals.js":"3","/Users/alearanibar/codingcfv/reactpractice/lottery/src/components/lotto/index.jsx":"4","/Users/alearanibar/codingcfv/reactpractice/lottery/src/components/mega/index.jsx":"5","/Users/alearanibar/codingcfv/reactpractice/lottery/src/components/power/index.jsx":"6","/Users/alearanibar/codingcfv/reactpractice/lottery/src/pages/homepage/index.jsx":"7","/Users/alearanibar/codingcfv/reactpractice/lottery/src/components/nav/index.jsx":"8"},{"size":588,"mtime":1610388625000,"results":"9","hashOfConfig":"10"},{"size":570,"mtime":1610392395000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609564902000,"results":"12","hashOfConfig":"10"},{"size":1971,"mtime":1610410635000,"results":"13","hashOfConfig":"10"},{"size":1867,"mtime":1610404691000,"results":"14","hashOfConfig":"10"},{"size":1698,"mtime":1610407142000,"results":"15","hashOfConfig":"10"},{"size":574,"mtime":1610405483000,"results":"16","hashOfConfig":"10"},{"size":518,"mtime":1610399933000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1k0qw3n",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/alearanibar/codingcfv/reactpractice/lottery/src/index.js",[],["36","37"],"/Users/alearanibar/codingcfv/reactpractice/lottery/src/App.js",[],"/Users/alearanibar/codingcfv/reactpractice/lottery/src/reportWebVitals.js",[],"/Users/alearanibar/codingcfv/reactpractice/lottery/src/components/lotto/index.jsx",["38"],"import React, { useState, useEffect } from 'react'\nimport './lotto.styles.scss'\n\n\nconst Lotto = () => {\n  const [num, setNum] = useState([])\n  const [mega, setMega] = useState([]);\n\n  function lottery() {\n    let lotteryNums = [];\n    let megaNumber = [];\n\n    while (lotteryNums.length < 5) {\n      let lotNum = Math.floor(Math.random() * 1000);\n      if (lotNum > 0 && lotNum <= 47 && !lotteryNums.includes(lotNum)) {\n        lotteryNums.push(lotNum);\n      }\n    }\n    while (megaNumber.length < 1) {\n      let mega = Math.floor(Math.random() * 1000);\n      if (mega > 0 && mega <= 27) {\n        megaNumber.push(mega);\n      }\n    }\n\n    return { lotteryNums, megaNumber };\n  }\n\n\n  function handleNumbers(){\n    let test1 = lottery()\n    setNum(prev => prev = test1.lotteryNums)\n    console.log(test1.lotteryNums)\n    setMega(prev => prev = test1.megaNumber)\n  }\n\n  // useEffect(() => {\n  //   console.log('in useEffect',num)\n    \n  // }, [num])\n\n\n  return (\n    <div className=\"lotto-container\">\n      <p className=\"title\">Super Lotto</p>\n      <div className=\"game-results\">\n        <div className=\"five-numbers\">\n          {num.length === 0 ? \"\" : <p>Numbers to play</p>}\n\n          <div className=\"number-container\">\n            {num.map((n, i) => (\n              <div className=\"box-num\">\n                <p className=\"win-num\">{n}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"mega\">\n          {num.length === 0 ? \"\" : <p>Mega</p>}\n\n          {mega.length === 0 ? (\n            \"\"\n          ) : (\n            <div className=\"box-num\">\n              <p className=\"win-num\">{mega}</p>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"box-button\">\n        {num.length < 1 ? (\n          <button onClick={handleNumbers}>New Numbers</button>\n        ) : (\n          <button onClick={handleNumbers}>Get New Set</button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Lotto\n","/Users/alearanibar/codingcfv/reactpractice/lottery/src/components/mega/index.jsx",[],"/Users/alearanibar/codingcfv/reactpractice/lottery/src/components/power/index.jsx",[],"/Users/alearanibar/codingcfv/reactpractice/lottery/src/pages/homepage/index.jsx",[],"/Users/alearanibar/codingcfv/reactpractice/lottery/src/components/nav/index.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":27,"nodeType":"45","messageId":"46","endLine":1,"endColumn":36},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]