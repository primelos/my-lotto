[{"/Users/alearanibar/codingcfv/reactpractice/lottery/src/index.js":"1","/Users/alearanibar/codingcfv/reactpractice/lottery/src/App.js":"2","/Users/alearanibar/codingcfv/reactpractice/lottery/src/reportWebVitals.js":"3","/Users/alearanibar/codingcfv/reactpractice/lottery/src/components/lotto/index.jsx":"4"},{"size":500,"mtime":1609564902000,"results":"5","hashOfConfig":"6"},{"size":209,"mtime":1609575812000,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1609564902000,"results":"8","hashOfConfig":"6"},{"size":1510,"mtime":1609575485000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1k0qw3n",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/alearanibar/codingcfv/reactpractice/lottery/src/index.js",[],["20","21"],"/Users/alearanibar/codingcfv/reactpractice/lottery/src/App.js",[],"/Users/alearanibar/codingcfv/reactpractice/lottery/src/reportWebVitals.js",[],"/Users/alearanibar/codingcfv/reactpractice/lottery/src/components/lotto/index.jsx",["22"],"import React, { useState, useEffect } from 'react'\nimport './lotto.styles.scss'\n\n\nconst Lotto = () => {\n  const [num, setNum] = useState([])\n  const [mega, setMega] = useState([]);\n\n  function lottery() {\n    let lotteryNums = [];\n    let megaNumber = [];\n\n    while (lotteryNums.length < 5) {\n      let lotNum = Math.floor(Math.random() * 1000);\n      if (lotNum > 0 && lotNum <= 47 && !lotteryNums.includes(lotNum)) {\n        lotteryNums.push(lotNum);\n      }\n    }\n    while (megaNumber.length < 1) {\n      let mega = Math.floor(Math.random() * 1000);\n      if (mega > 0 && mega <= 27) {\n        megaNumber.push(mega);\n      }\n    }\n\n    return { lotteryNums, megaNumber };\n  }\n\n\n  function handleNumbers(){\n    let test1 = lottery()\n    setNum(prev => prev = test1.lotteryNums)\n    console.log(test1.lotteryNums)\n    setMega(prev => prev = test1.megaNumber)\n  }\n\n  // useEffect(() => {\n  //   console.log('in useEffect',num)\n    \n  // }, [num])\n\n\n  return (\n    <div className=\"box-container\">\n      {num.length === 0 ? <p>Let pick them lucky numbers</p> : \"\"}\n      <div className=\"number-container\">\n        {num.map((n, i) => (\n          <div key={i} className=\"box-num\">\n            <p className=\"win-num\">{n}</p>\n          </div>\n        ))}\n        {mega.length === 0 ? '':\n        \n        <div className=\"box-num\">\n          <h3 className=\"win-num\">{mega}</h3>\n        </div>\n        }\n      </div>\n      <button onClick={handleNumbers}>New Numbers</button>\n    </div>\n  );\n}\n\nexport default Lotto\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":27,"nodeType":"29","messageId":"30","endLine":1,"endColumn":36},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]